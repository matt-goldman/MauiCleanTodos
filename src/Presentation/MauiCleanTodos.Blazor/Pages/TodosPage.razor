@inject ITodoListsService todoListService
@inject ITodoItemsService todoItemService

@page "/todos"
@using System.Collections.ObjectModel;

<div class="container">
    <div class="row mx-auto h-100">
        <div class="col">
            <div class="todo-card">
                <div class="todo-list-button-list">
                    @if (hasTodos)
                    {
                         @foreach (var list in todoLists)
                        {
                            <button class="list-button mx-auto align-middle" style="background-color:@list.Colour" @onclick="() => SelectList(list)">@list.Title</button>
                        }
                    }
                </div>
                <div class="add-button-container">
                    <button class="add-button mx-auto align-middle">+ Add Todo List</button>
                </div>
            </div>
        </div>
        <div class="col">
            @if(selectedList is not null)
            {
                <div class="todo-card">
                    <div class="todo-list-button-list">
                        @foreach (var item in selectedList.Items)
                        {
                            <div class="todo-item">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="@item.Done" id="flexCheckDefault">
                                    <label class="form-check-label" for="flexCheckDefault">
                                        @item.Title
                                    </label>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="add-button-container">
                        <button class="add-button mx-auto align-middle">+ Add Todo Item</button>
                    </div>
                </div>
            }
        </div>
        <div class="col">
            <div class="item-dialog">
                hello
            </div>
        </div>
    </div>
</div>


@code {
    private ObservableCollection<TodoListDto> todoLists = new();

    private bool hasTodos = false;

    private TodoListDto selectedList;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            try
            {
                var lists = await todoListService.GetTodos();
                GetTodoLists(lists);
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
        }
    }

    private void GetTodoLists(List<TodoListDto> lists)
    {
        foreach (var list in lists)
        {
            todoLists.Add(list);
        }

        hasTodos = true;
        StateHasChanged();
    }

    private void SelectList(TodoListDto list)
    {
        selectedList = list;
    }
}
